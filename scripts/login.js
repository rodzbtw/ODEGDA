console.log('Login.js –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');

// –ó–ê–í–î–ê–ù–ù–Ø 3: –†–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏

// –†–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
const loginRegex = /^[a-zA-Z0-9_]{3,20}$/;
const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;

console.log('=== –ó–ê–í–î–ê–ù–ù–Ø 3: –†–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏ ===');
console.log('Login regex:', loginRegex);
console.log('Email regex:', emailRegex);
console.log('Phone regex:', phoneRegex);

// –§—É–Ω–∫—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó login (match/search)
function validateLogin(login) {
    const isValid = loginRegex.test(login);
    console.log('–í–∞–ª—ñ–¥–∞—Ü—ñ—è Login:', login, '‚Üí', isValid ? '‚úÖ –í–∞–ª—ñ–¥–Ω–∏–π' : '‚ùå –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π');
    return isValid;
}

// –§—É–Ω–∫—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó email (match/search)
function validateEmail(email) {
    const isValid = emailRegex.test(email);
    console.log('–í–∞–ª—ñ–¥–∞—Ü—ñ—è Email:', email, '‚Üí', isValid ? '‚úÖ –í–∞–ª—ñ–¥–Ω–∏–π' : '‚ùå –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π');
    return isValid;
}

// –§—É–Ω–∫—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó phone (match/search)
function validatePhone(phone) {
    const isValid = phoneRegex.test(phone);
    console.log('–í–∞–ª—ñ–¥–∞—Ü—ñ—è Phone:', phone, '‚Üí', isValid ? '‚úÖ –í–∞–ª—ñ–¥–Ω–∏–π' : '‚ùå –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π');
    return isValid;
}

// –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è login (replace)
function cleanLogin(login) {
    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º –ª—ñ—Ç–µ—Ä, —Ü–∏—Ñ—Ä —Ç–∞ _
    const cleaned = login.replace(/[^a-zA-Z0-9_]/g, '');
    console.log('üßπ Clean login (replace):', login, '‚Üí', cleaned);
    return cleaned;
}

// –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–æ–ª—ñ–≤

// Login –ø–æ–ª–µ
const loginInput = document.getElementById('login');
if (loginInput) {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ (replace)
    loginInput.addEventListener('input', function() {
        const originalValue = this.value;
        const cleanedValue = cleanLogin(originalValue);
        
        if (originalValue !== cleanedValue) {
            this.value = cleanedValue;
        }
    });
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ —Ñ–æ–∫—É—Å—É (match/search)
    loginInput.addEventListener('blur', function() {
        const login = this.value;
        if (login) {
            if (validateLogin(login)) {
                this.classList.remove('invalid');
                this.classList.add('valid');
            } else {
                this.classList.remove('valid');
                this.classList.add('invalid');
            }
        } else {
            this.classList.remove('valid', 'invalid');
        }
    });
}

// Email –ø–æ–ª–µ
const emailInput = document.getElementById('email');
if (emailInput) {
    emailInput.addEventListener('blur', function() {
        const email = this.value;
        if (email) {
            if (validateEmail(email)) {
                this.classList.remove('invalid');
                this.classList.add('valid');
            } else {
                this.classList.remove('valid');
                this.classList.add('invalid');
            }
        } else {
            this.classList.remove('valid', 'invalid');
        }
    });
}

// Phone –ø–æ–ª–µ
const phoneInput = document.getElementById('phone');
if (phoneInput) {
    phoneInput.addEventListener('blur', function() {
        const phone = this.value;
        if (phone) {
            if (validatePhone(phone)) {
                this.classList.remove('invalid');
                this.classList.add('valid');
            } else {
                this.classList.remove('valid');
                this.classList.add('invalid');
            }
        } else {
            this.classList.remove('valid', 'invalid');
        }
    });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤
function validateAll() {
    console.log('\n=== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤ ===');
    
    const login = document.getElementById('login').value;
    const email = document.getElementById('email').value;
    const phone = document.getElementById('phone').value;
    
    const loginValid = validateLogin(login);
    const emailValid = validateEmail(email);
    const phoneValid = validatePhone(phone);
    
    const resultDiv = document.getElementById('result');
    resultDiv.classList.add('show');
    
    if (loginValid && emailValid && phoneValid) {
        resultDiv.className = 'result show success';
        resultDiv.innerHTML = '‚úÖ –í—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!';
    } else {
        resultDiv.className = 'result show error';
        let errors = [];
        if (!loginValid) errors.push('Login');
        if (!emailValid) errors.push('Email');
        if (!phoneValid) errors.push('Phone');
        resultDiv.innerHTML = `‚ùå –ü–æ–º–∏–ª–∫–∏ –≤ –ø–æ–ª—è—Ö: ${errors.join(', ')}`;
    }
    
    console.log('=== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===\n');
}

console.log('=== Login.js –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏ ===\n');
